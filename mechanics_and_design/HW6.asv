% Mechanics and Design
% Homework 6
% 2014-10773 ¿Â¿Œ±‘

function problem1()
    E = 10000000;   % Pa
    A = 5;          % m2
    J = 50;         % m4
    L1 = 100;       % m
    L2 = 50;        % m
    L3 = 50;        % m
    elements = [
        [1, 2, [1, 0], E, A, J, L1];
        [1, 3, [0, -1], E, A, J, L2];
        [2, 4, [0, -1], E, A, J, L3]
        ];
    K = K_global(4, elements);
end

% obtain the global stiffness matrix
function K_global = K_global(nodes, elements)
    % global stiffness matrix K_global
    % d1, d2, phi for a node
    K_global = zeros(nodes * 3);
    
    for i = 1:size(elements)
        % information about an element
        node1 = elements(i, 1);
        node2 = elements(i, 2);
        direction = [elements(i, 3); elements(i, 4)];
        E = elements(i, 5);
        A = elements(i, 6);
        J = elements(i, 7);
        L = elements(i, 8);
        
        % some useful factors to reduce # of calculations
        k1 = E * A / L;
        k2 = 12 * E * J / L / L / L;
        k3 = 6 * E * J / L / L;
        k4 = 4 * E * J / L
        k4 = 2 * E * J / L;
        
        % element stiffness matrix in local coord
        k_element_local = [
            
        
    end
end

% obtain the reduced stiffness matrix from K_global
function K_reduced = K_reduced(K_global, boundary)
    
end

